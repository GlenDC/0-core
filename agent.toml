[main]
gid = 1
nid = 10
max_jobs = 100
message_id_file = "./.mid"
history_file = "./.history"
roles = []
include = "./conf"

[controllers]
    [controllers.main]
    url = "http://localhost:8966"
        [controllers.main.security]
        # UNCOMMENT THE FOLLOWING LINES TO USE SSL
        #client_certificate = "/path/to/client-test.crt"
        #client_certificate_key = "/path/to/client-test.key"

        # defines an extra CA to trust (used in case of server self-signed certs)
        # should be empty string otherwise.

        #certificate_authority = "/path/to/server.crt"

[channel]
cmds = [] # empty for long polling from all defined controllers, or specif controllers keys

[extensions]
    #the very basic agent extensions. Also please check the toml files under
    #the Main.Include folder for more extensions
    [extensions.syncthing]
    binary = "./syncthing"
    cwd = "./extensions/syncthing"
    args = ["-home", "./home", "-gui-address", "127.0.0.1:28384"]

    [extensions.sync]
    #syncthing extension
    binary = "python2.7"
    cwd = "./extensions/sync"
    args = ["{name}.py"]
        [extensions.sync.env]
        PYTHONPATH = "../:/opt/jumpscale7/lib"
        SYNCTHING_URL = "http://localhost:28384"

    [extensions.jumpscript]
    binary = "python2.7"
    cwd = "./extensions/jumpscript"
    args = ["wrapper.py", "{domain}", "{name}"]
        [extensions.jumpscript.env]
        SOCKET = "/tmp/jumpscript.sock"
        PYTHONPATH = "../"

    [extensions.jumpscript_content]
    binary = "python2.7"
    cwd = "./extensions/jumpscript"
    args = ["wrapper_content.py", "{name}"]
        [extensions.jumpscript_content.env]
        SOCKET = "/tmp/jumpscript.sock"
        PYTHONPATH = "../"

    [extensions.js_daemon]
    binary = "python2.7"
    cwd = "./extensions/jumpscript"
    args = ["executor.py"]
        [extensions.js_daemon.env]
        SOCKET = "/tmp/jumpscript.sock"
        PYTHONPATH = "../:/opt/jumpscale7/lib"
        JUMPSCRIPTS_HOME = "/opt/jumpscale7/apps/agent2/jumpscripts/"
        JUMPSCRIPTS_LEGACY_HOME = "/opt/jumpscale7/apps/agent2/legacy/"

    [extensions.bash]
    binary = "bash"
    args = ['-c', 'T=`mktemp` && cat > $T && chmod +x $T && bash -c $T; EXIT=$?; rm -rf $T; exit $EXIT']

[logging]
    [logging.db]
    type = "DB"
    log_dir = "./logs"
    levels = [1, 2, 4, 7, 8, 9, 11]  # (all error messages + debug) empty for all

    [logging.ac]
    type = "AC"
    flush_int = 300 # seconds (5min)
    batch_size = 1000 # max batch size, force flush if reached this count.
    controllers = [] # empty for all controllers, or controllers keys
    levels = [2, 4, 7, 8, 9, 11]  # (all error messages + debug) empty for all

    [logging.console]
    type = "console"
    levels = [2, 4, 7, 8, 9]

[stats]
interval = 60 # seconds
controllers = [] # empty for all controllers, or controllers keys

[hubble]
controllers = [] # accept forwarding commands and connections from all controllers. Or specific controllers by name

[startup]
    [startup.syncthing]
    name = "syncthing"
        [startup.syncthing.args]
        loglevels_db = '*'
        domain = "agent"
        name = "syncthing"

    [startup.controller_syncthing_tunnel]
    #open a tunnel from this agent to the controller syncthing instance.
    #local port 33000
    #remote port 22000
    #this is used in case the controller is behind nat and syncthing can't reach it.
    name = "hubble_open_tunnel"
    data = '{"local": 33000, "gateway": "controller", "remote": 22000, "ip": "127.0.0.1", "controller": "main"}'

    [startup.legacy]
    name = "js_legacy_daemon"
        [startup.legacy.args]
        max_restart = 10
        domain = "agent"
        name = "legacy"

    [startup.jumpscript]
    name = "js_daemon"
        [startup.jumpscript.args]
        max_restart = 10
        domain = "agent"
        name = "jumpscript"



